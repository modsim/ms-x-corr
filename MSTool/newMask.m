function varargout = newMask(varargin)

global handles

fig = figure;
set( fig, 'Name', 'MS-Correction (natural Isotope elemination)', 'Menubar', 'none', 'Position', [100 100 910 600] );

if nargin == 0
   
    if nargout > 0
      varargout{1} = fig;
   end
   
%   set(fig,'Color', get(0,'defaultUicontrolBackgroundColor'));
   set(fig, 'Color', [0.95 0.95 0.95]  );
   set( 0, 'defaultUicontrolBackgroundColor', [0.95 0.95 0.95] );
 
   handles.edMolName = uicontrol( 'Parent', fig, 'Style', 'Edit', 'String', '',...
      'Position', [10 530 200 25], 'Callback', 'edMolName_Callback', 'Tag', 'edMolName', 'HorizontalAlignment', 'left' );
   handles.tMolName = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', 'Fragment Name',...
      'Position', [10 560 200 15], 'HorizontalAlignment', 'left' );
   
   handles.edMolSumForm = uicontrol( 'Parent', fig, 'Style', 'Edit', 'String', '',...
      'Position', [10 480 200 25], 'Callback', 'edSumForm_Callback', 'Tag', 'edMolSumForm', 'HorizontalAlignment', 'left' );
   
    handles.tMolName = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', 'chem. Sum Form',...
      'Position', [10 510 200 15], 'HorizontalAlignment', 'left' );
   
   handles.bNewMol = uicontrol( 'Parent', fig, 'Style', 'Pushbutton', 'String', 'New',...
      'Position', [10 450 60 20], 'Callback', 'bNewMol_Callback', 'Tag', 'bNewMol' );
   handles.bCopyMol = uicontrol( 'Parent', fig, 'Style', 'Pushbutton', 'String', 'Copy',...
      'Position', [80 450 60 20], 'Callback', 'bCopyMol_Callback', 'Tag', 'bCopyMol' );
   handles.bDelMol = uicontrol( 'Parent', fig, 'Style', 'Pushbutton', 'String', 'Delete',...
      'Position', [150 450 60 20], 'Callback', 'bDelMol_Callback', 'Tag', 'bDelMol' );
   
   handles.ListMol = uicontrol( 'Parent', fig, 'Style', 'ListBox', 'String', {},...
      'Position', [10 70 200 370], 'Callback', 'ListMol_Callback', 'Tag', 'ListMol' );
   
   handles.bSaveListMol = uicontrol( 'Parent', fig, 'Style', 'Pushbutton', 'String', 'Save List',...
      'Position', [10 40 90 20], 'Callback', 'bSaveListMol_Callback', 'Tag', 'bSaveListMol' );
   
   handles.bLoadListMol = uicontrol( 'Parent', fig, 'Style', 'Pushbutton', 'String', 'Load List',...
      'Position', [120 40 90 20], 'Callback', 'bLoadListMol_Callback', 'Tag', 'bLoadListMol' );
   
   handles.tFListMol = uicontrol( 'Parent', fig, 'Style', 'Edit', 'String', '', 'Enable', 'inactive', ...
      'Position', [10 10 200 25] );

   handles.edSepForm = uicontrol( 'Parent', fig, 'Style', 'Edit', 'String', '',...
      'Position', [230 480 200 25], 'Callback', 'edSumForm_Callback', 'Tag', 'edSepForm', 'HorizontalAlignment', 'left' );
   handles.txt = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', 'separated from chain:',...
      'Position', [230 510 200 15], 'HorizontalAlignment', 'left' );
   
   handles.edC = uicontrol( 'Parent', fig, 'Style', 'Edit', 'String', '',...
      'Position', [230 430 200 25], 'Callback', 'edC_Callback', 'Tag', 'edC', 'HorizontalAlignment', 'left' );
   handles.txt = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', 'Fragment contains C',...
      'Position', [230 460 200 15], 'HorizontalAlignment', 'left' );

   handles.edSumForm = uicontrol( 'Parent', fig, 'Style', 'Edit', 'String', '',...
      'Position', [230 365 200 25], 'Callback', 'edSumForm_Callback', 'Tag', 'edSumForm', 'HorizontalAlignment', 'left' );
   handles.txt = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', 'Derivate rest (chem. Sum Form)',...
      'Position', [230 395 200 15], 'Tag', 'tSumForm', 'HorizontalAlignment', 'left' );
   
   handles.ListSamples = uicontrol( 'Parent', fig, 'Style', 'ListBox', 'String', {},...
      'Position', [230 70 200 250], 'Callback', 'ListSamples_Callback' );

   handles.frame = uicontrol( 'Parent', fig, 'Style', 'Frame', ...
      'Position', [230+240 415+90 210 65] );

   handles.tC = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', 'C',...
      'Position', [230+245 450+90 15 20] );
   handles.tH = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', 'H',...
      'Position', [280+245 450+90 15 20] );
   handles.tO = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', 'O',...
      'Position', [330+245 450+90 15 20] );
   handles.tN = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', 'N',...
      'Position', [230+245 420+90 15 20] );
   handles.tP = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', 'P',...
      'Position', [280+245 420+90 15 20] );
   handles.tS = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', 'S',...
      'Position', [330+245 420+90 15 20] );
   handles.tSi = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', 'Si',...
      'Position', [380+245 420+90 30 20] );
   handles.nC = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', '0',...
      'Position', [245+245 450+90 25 20], 'Tag', 'nC' );
   handles.nH = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', '0',...
      'Position', [295+245 450+90 25 20], 'Tag', 'nH' );
   handles.nO = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', '0',...
      'Position', [345+245 450+90 25 20], 'Tag', 'nO' );
   handles.nN = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', '0',...
      'Position', [245+245 420+90 25 20], 'Tag', 'nN' );
   handles.nP = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', '0',...
      'Position', [295+245 420+90 25 20], 'Tag', 'nP' );
   handles.nS = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', '0',...
      'Position', [345+245 420+90 25 20], 'Tag', 'nS' );
   handles.nSi = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', '0',...
	   'Position', [405+245 420+90 25 20], 'Tag', 'nSi' );
   
   handles.tm0 = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', 'm0:',...
      'Position', [230+245 390+80 20 20] );
   handles.m0 = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', '0',...
      'Position', [252+245 390+80 40 20], 'Tag', 'm0' );
   
   handles.tIso = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', 'back',...
      'Position', [230+245 365+80 40 20], 'HorizontalAlign', 'left' );
   handles.edIsoBack = uicontrol( 'Parent', fig, 'Style', 'Edit', 'String', '',...
      'Position', [275+245 363+80 50 25], 'Tag', 'edIso', 'Callback', 'edIso_Callback', 'HorizontalAlign', 'right' );
   
   handles.tIso = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', 'forw.',...
      'Position', [335+245 365+80 40 20], 'HorizontalAlign', 'left' );
   handles.edIsoForw = uicontrol( 'Parent', fig, 'Style', 'Edit', 'String', '',...
      'Position', [380+245 363+80 50 25], 'Tag', 'edIso', 'Callback', 'edIso_Callback', 'HorizontalAlign', 'right' );
   
   handles.tNoiseMean = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', 'Hat: Bias', 'HorizontalAlign', 'left', ...
      'Position', [475 400 70 20] );
   handles.edNoiseMean = uicontrol( 'Parent', fig, 'Style', 'Edit', 'String', '0', 'HorizontalAlign', 'right',...
      'Position', [540 400 40 25], 'Callback', 'edNoise' );
   handles.tNoiseDev = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', 'Noise', 'HorizontalAlign', 'right', ...
      'Position', [590 400 40 20] );
   handles.edNoiseDev = uicontrol( 'Parent', fig, 'Style', 'Edit', 'String', '0', 'HorizontalAlign', 'right',...
      'Position', [635 400 40 25], 'Callback', 'edNoise' );
   
   handles.tMMeas = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', 'M-',...
      'Position', [475 365 20 20], 'HorizontalAlignment', 'left', 'Visible', 'Off' );
   handles.edMMeas = uicontrol( 'Parent', fig, 'Style', 'Edit', 'String', '',...
      'Position', [500 365 50 25], 'Callback', 'edMMeas_Callback', 'Tag', 'edSumForm', 'HorizontalAlignment', 'left', 'Visible', 'Off' );
   
   handles.tValMeas = uicontrol( 'Parent', fig, 'Style', 'Text', 'String', ':',...
      'Position', [553 365 10 20], 'HorizontalAlignment', 'left', 'Visible', 'Off' );
   handles.edValMeas = uicontrol( 'Parent', fig, 'Style', 'Edit', 'String', '',...
      'Position', [560 365 85 25], 'Callback', 'edValMeas_Callback', 'Tag', 'edValMeas', 'HorizontalAlignment', 'right', 'Visible', 'Off' );
   
   handles.bDelMeas = uicontrol( 'Parent', fig, 'Style', 'Pushbutton', 'String', 'Delete',...
      'Position', [475 330 90 20], 'Callback', 'bDelMeas_Callback', 'Visible', 'Off' );
   handles.bDelAllMeas = uicontrol( 'Parent', fig, 'Style', 'Pushbutton', 'String', 'Del. All',...
      'Position', [585 330 90 20], 'Callback', 'bDelAllMeas_Callback', 'Visible', 'Off' );
   
%   handles.ListMeas = uicontrol( 'Parent', fig, 'Style', 'ListBox', 'String', {}, ...
%      'Position', [475 70 200 300], 'Tag', 'ListMeas', 'FontName', 'FixedWidth', 'FontSize', 8 );
   handles.ListMeas = uicontrol( 'Parent', fig, 'Style', 'ListBox', 'String', {}, ...
      'Position', [475 70 200 300], 'Tag', 'ListMeas', 'FontName', 'FixedWidth' );
  
   handles.bFSaveMeas = uicontrol( 'Parent', fig, 'Style', 'Pushbutton', 'String', 'Save List',...
      'Position', [475 40 90 20], 'Callback', 'bFSaveMeas_Callback', 'Tag', 'bFSaveMeas', 'Visible', 'Off' );
   
   handles.bFLoadMeas_csv = uicontrol( 'Parent', fig, 'Style', 'Pushbutton', 'String', 'Load csv data',...
      'Position', [475 40 90 22], 'Callback', 'bFLoadMeas_Callback_csv', 'Tag', 'bFLoadMeas' );
   
   handles.bFLoadMeas_xls = uicontrol( 'Parent', fig, 'Style', 'Pushbutton', 'String', 'Load xls data',...
      'Position', [475 10 90 22], 'Callback', 'bFLoadMeas_Callback_xls', 'Tag', 'bFLoadMeas' );

   handles.bRunCorr = uicontrol( 'Parent', fig, 'Style', 'Pushbutton', 'String', 'RUN Correction',...
      'Position', [700 540 200 30], 'Callback', 'bRunCorr_Callback', 'Tag', 'bRunCorr' );

   handles.bRunCorrM = uicontrol( 'Parent', fig, 'Style', 'Pushbutton', 'String', 'RUN for all (to txt)',...
      'Position', [700 460 200 30], 'Callback', 'bRunCorrM_Callback', 'Tag', 'bRunCorr' );
   
   handles.cbFracVal = uicontrol( 'Parent', fig, 'Style', 'Radiobutton', 'String', 'Normalize MDV',...
      'Position', [700 435 200 20], 'Value', 1 );
   handles.cbIncStat = uicontrol( 'Parent', fig, 'Style', 'Radiobutton', 'String', 'Include statistics',...
      'Position', [700 415 200 20], 'Value', 1 );
   handles.cbAutoStat = uicontrol( 'Parent', fig, 'Style', 'Radiobutton', 'String', 'Est. measurement noise',...
      'Position', [700 395 200 20], 'Value', 0 );
   
   handles.ListCorr = uicontrol( 'Parent', fig, 'Style', 'ListBox', 'String', {},...
      'Position', [700 70 200 255], 'Tag', 'ListCorr', 'FontName', 'FixedWidth' );
   
%	load( 'amino.mat', '-mat' );

%	for j=1:length(MolList)
%      name{j} = MolList(j).Name;
%   end

%   set( handles.ListMol, 'String', Name );
   
   ListMol_Callback;
   
elseif ischar(varargin{1}) % INVOKE NAMED SUBFUNCTION OR CALLBACK
   
   try
      if (nargout)
         [varargout{1:nargout}] = feval(varargin{:}); % FEVAL switchyard
      else
         feval(varargin{:}); % FEVAL switchyard
      end
   catch
      disp(lasterr);
   end
   
end